[build-system]
build-backend = "hatchling.build"
requires = [ "hatch-vcs", "hatchling" ]

[project]
name = "scaleflow-tools"
description = "Modeling complex perturbations with flow matching at single-cell resolution"
readme = "README.md"
license = "PolyForm-Noncommercial-1.0.0"
maintainers = [
  { name = "Dominik Klein" },
  { name = "Selman Oezleyen" },
  { name = "Jonas Simon Fleck" },
  { name = "Daniil Bobrovskiy" },
  { name = "Guillaume Huguet" },
]
authors = [
  { name = "Dominik Klein" },
  { name = "Jonas Simon Fleck" },
  { name = "Daniil Bobrovskiy" },
  { name = "Guillaume Huguet" },
]
requires-python = ">=3.11"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

dynamic = [ "version" ]
dependencies = [
  "adjusttext",
  "anndata",
  "cloudpickle",
  "coverage",
  "dask",
  "diffrax",
  "flax",
  "orbax",
  "ott-jax==0.5",
  "pyarrow",             # required for dask.dataframe
  "scanpy",
  "scikit-learn==1.5.1",
  "scipy<1.16",          # see https://github.com/statsmodels/statsmodels/issues/9584
  "session-info",
]

optional-dependencies.dev = [
  "furo",
  "myst-nb",
  "pre-commit",
  "sphinx",
  "sphinx-autodoc-typehints",
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-tippy",
  "sphinxcontrib-bibtex",
  "tox>=4",
]
optional-dependencies.docs = [
  "docutils>=0.8,!=0.18.*,!=0.19.*",
  # For notebooks
  "ipykernel",
  "ipython",
  "myst-nb>=1.1",
  "pandas",
  "scvi-tools>=1.3.1",
  "setuptools",               # Until pybtex >0.23.0 releases: https://bitbucket.org/pybtex-devs/pybtex/issues/169/
  "sphinx>=8",
  "sphinx-autodoc-typehints",
  "sphinx-book-theme>=1",
  "sphinx-copybutton",
  "sphinxcontrib-bibtex>=2",
  "sphinxext-opengraph",
]
optional-dependencies.embedding = [
  "requests",
  "torch",
  "transformers",
]
optional-dependencies.external = [
  "scvi-tools>=1.3.1",
]
optional-dependencies.pp = [
  "pertpy",
  "pynndescent",
  "rdkit",
]
optional-dependencies.test = [
  "scaleflow-tools[embedding]",
  "scaleflow-tools[external]",
  "scaleflow-tools[pp]",
  "coverage[toml]>=7",
  "pytest",
  "pytest-cov>=6",
  "pytest-mock>=3.5",
  "pytest-xdist>=3",
]

urls.Documentation = "https://scaleflow.readthedocs.io/"
urls.Home-page = "https://github.com/theislab/scaleflow"
urls.Source = "https://github.com/theislab/scaleflow"

[tool.hatch.build.targets.wheel]
packages = [ 'src/scaleflow' ]

[tool.hatch.version]
source = "vcs"
fallback-version = "0.1.0"

[tool.ruff]
line-length = 120
src = [ "src" ]
extend-include = [ "*.ipynb" ]

format.docstring-code-format = true
lint.select = [
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # Error detected by Pycodestyle
  "F",      # Errors detected by Pyflakes
  "I",      # isort
  "RUF100", # Report unused noqa directives
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # Warning detected by Pycodestyle
]
lint.ignore = [
  # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "B008",
  # Missing docstring in public module
  "D100",
  # Missing docstring in public package
  "D104",
  # __magic__ methods are often self-explanatory, allow missing docstrings
  "D105",
  # Missing docstring in __init__
  "D107",
  ## Disable one in each pair of mutually incompatible rules
  # We don't want a blank line before a class docstring
  "D203",
  # We want docstrings to start immediately after the opening triple quote
  "D213",
  # first line should end with a period [Bug: doesn't work with single-line docstrings]
  "D400",
  # First line should be in imperative mood; try rephrasing
  "D401",
  # line too long -> we accept long comment lines; formatter gets rid of long code lines
  "E501",
  # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E731",
  # allow I, O, l as variable names -> I is the identity matrix
  "E741",
]
lint.per-file-ignores."*/__init__.py" = [ "F401" ]
lint.per-file-ignores."docs/*" = [ "I" ]
lint.per-file-ignores."tests/*" = [ "D" ]
lint.pydocstyle.convention = "numpy"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
xfail_strict = true
addopts = [
  "--import-mode=importlib", # allow using test files with same name
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
branch = true
source = [ "src/" ]
concurrency = [ "multiprocessing" ]
parallel = "true"

[tool.coverage.report]
exclude_lines = [
  '\#.*pragma:\s*no.?cover',
  "^if __name__ == .__main__.:$",
  '^\s*raise AssertionError\b',
  '^\s*raise NotImplementedError\b',
  '^\s*return NotImplemented\b',
]
precision = 2
show_missing = true
skip_empty = true
sort = "Miss"

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = lint-code,py{3.11,3.12,3.13}
skip_missing_interpreters = true

[testenv]
extras = test,pp,external,embedding
pass_env = PYTEST_*,CI
commands =
    coverage run -m pytest {tty:--color=yes} {posargs: \
        --cov={env_site_packages_dir}{/}scaleflow --cov-config={tox_root}{/}pyproject.toml \
        --no-cov-on-fail --cov-report=xml --cov-report=term-missing:skip-covered}

[testenv:lint-code]
extras = test,pp,external,embedding
description = Lint the code.
deps = pre-commit>=3.0.0
skip_install = true
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:lint-docs]
description = Lint the documentation.
extras = test,pp,external,embedding
ignore_errors = true
allowlist_externals = make
pass_env = PYENCHANT_LIBRARY_PATH
set_env = SPHINXOPTS = -W -q --keep-going
changedir = {tox_root}{/}docs
commands =
    make linkcheck {posargs}
    # make spelling {posargs}

[testenv:examples-docs]
extras = test,pp,external,embedding
allowlist_externals = bash
description = Run the notebooks.
use_develop = true
deps =
    ipykernel
    jupytext
    nbconvert
    leidenalg
changedir = {tox_root}{/}docs
commands =
    python -m ipykernel install --user --name=scaleflow
    bash {tox_root}/.run_notebooks.sh {tox_root}{/}docs/notebooks

[testenv:clean-docs]
description = Remove the documentation.
deps =
skip_install = true
changedir = {tox_root}{/}docs
allowlist_externals = make
commands =
    make clean

[testenv:build-docs]
description = Build the documentation.
deps =
extras = test,pp,external,embedding
allowlist_externals = make
changedir = {tox_root}{/}docs
commands =
    make html {posargs}
commands_post =
    python -c 'import pathlib; print("Documentation is under:", pathlib.Path("{tox_root}") / "docs" / "_build" / "html" / "index.html")'

[testenv:build-package]
description = Build the package.
deps =
    build
    twine
allowlist_externals = rm
commands =
    rm -rf {tox_root}{/}dist
    python -m build --sdist --wheel --outdir {tox_root}{/}dist{/} {posargs:}
    python -m twine check {tox_root}{/}dist{/}*
commands_post =
    python -c 'import pathlib; print(f"Package is under:", pathlib.Path("{tox_root}") / "dist")'

[testenv:format-references]
description = Format references.bib.
deps =
skip_install = true
allowlist_externals = biber
commands = biber --tool --output_file={tox_root}{/}docs{/}references.bib --nolog \
    --output_align --output_indent=2 --output_fieldcase=lower \
    --output_legacy_dates --output-field-replace=journaltitle:journal,thesis:phdthesis,institution:school \
    {tox_root}{/}docs{/}references.bib
"""

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
python_version = "3.11"
plugins = "numpy.typing.mypy_plugin"

ignore_errors = false

warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true

strict_optional = true
strict_equality = true
warn_return_any = false
warn_unreachable = false
check_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
no_warn_no_return = true

show_error_codes = true
show_column_numbers = true
error_summary = true
ignore_missing_imports = true

disable_error_code = [ "assignment", "comparison-overlap", "no-untyped-def", "override" ]

[tool.cruft]
skip = [
  "tests",
  "src/**/__init__.py",
  "src/**/basic.py",
  "docs/api.md",
  "docs/changelog.md",
  "docs/references.bib",
  "docs/references.md",
  "docs/notebooks/example.ipynb",
]

[tool.rstcheck]
ignore_directives = [
  "toctree",
  "currentmodule",
  "autosummary",
  "module",
  "automodule",
  "autoclass",
  "bibliography",
  "glossary",
  "card",
  "grid",
]
ignore_roles = [
  "mod",
]

[tool.doc8]
max_line_length = 120
